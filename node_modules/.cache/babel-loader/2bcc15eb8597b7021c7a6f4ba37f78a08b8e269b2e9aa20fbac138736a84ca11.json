{"ast":null,"code":"var _jsxFileName = \"/Users/kjw/Library/CloudStorage/OneDrive-\\u1100\\u116A\\u11BC\\u110B\\u116E\\u11AB\\u1103\\u1162\\u1112\\u1161\\u11A8\\u1100\\u116D/React/test/src/pages/member/KakaoRedirectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSearchParams } from \"react-router-dom\";\nimport { getAccessToken, getMemberWithAccessToken } from \"../../api/kakapApi\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../slices/loginSlice\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction KakaoRedirectPage(props) {\n  _s();\n  const [searchParams] = useSearchParams();\n  const {\n    moveToPath\n  } = useCustomLogin();\n  const authCode = searchParams.get('code');\n  const error = searchParams.get('error');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (error) {\n      moveToPath(\"/member/login\");\n    } else if (authCode) {\n      getAccessToken(authCode).then(accessToken => {\n        getMemberWithAccessToken(accessToken).then(memberInfo => {\n          console.log(\"--------------------\");\n          console.log(memberInfo);\n          dispatch(login(memberInfo));\n          if (memberInfo && memberInfo.social) {\n            moveToPath(\"/\");\n          } else {\n            moveToPath(\"/\");\n          }\n        }).catch(error => {\n          console.error(\"Error getting member info:\", error);\n          moveToPath(\"/\"); // 오류 발생 시 로그인 페이지로 이동\n        });\n      });\n    }\n    // getAccessToken(authCode).then(accessToken => {\n    //     getMemberWithAccessToken(accessToken)\n    //         .then(memberInfo => {\n    //             console.log(\"--------------------\");\n    //             console.log(memberInfo);\n    //             dispatch(login(memberInfo));\n    //\n    //             if (memberInfo && memberInfo.social) {\n    //                 moveToPath(\"/\");\n    //             } else {\n    //                 moveToPath(\"/\");\n    //             }\n    //         })\n    //         .catch(error => {\n    //             console.error(\"Error getting member info:\", error);\n    //             moveToPath(\"/login\"); // 오류 발생 시 로그인 페이지로 이동\n    //         });\n    // });\n  }, [authCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Kakao Login Redirect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(KakaoRedirectPage, \"SVTyfUWoFmCYXDbfYsyQmVNetVc=\", false, function () {\n  return [useSearchParams, useCustomLogin, useDispatch];\n});\n_c = KakaoRedirectPage;\nexport default KakaoRedirectPage;\nvar _c;\n$RefreshReg$(_c, \"KakaoRedirectPage\");","map":{"version":3,"names":["React","useEffect","useSearchParams","getAccessToken","getMemberWithAccessToken","useDispatch","login","useCustomLogin","jsxDEV","_jsxDEV","KakaoRedirectPage","props","_s","searchParams","moveToPath","authCode","get","error","dispatch","then","accessToken","memberInfo","console","log","social","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kjw/Library/CloudStorage/OneDrive-광운대학교/React/test/src/pages/member/KakaoRedirectPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSearchParams } from \"react-router-dom\";\nimport { getAccessToken, getMemberWithAccessToken } from \"../../api/kakapApi\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../slices/loginSlice\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\n\nfunction KakaoRedirectPage(props) {\n    const [searchParams] = useSearchParams();\n    const { moveToPath } = useCustomLogin();\n    const authCode = searchParams.get('code');\n    const error = searchParams.get('error')\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        if(error){\n\n            moveToPath(\"/member/login\")\n        }else if(authCode){\n            getAccessToken(authCode).then(accessToken => {\n                getMemberWithAccessToken(accessToken)\n                    .then(memberInfo => {\n                        console.log(\"--------------------\");\n                        console.log(memberInfo);\n                        dispatch(login(memberInfo));\n\n                        if(memberInfo && memberInfo.social){\n                            moveToPath(\"/\")\n                        }else{\n                            moveToPath(\"/\")\n                        }\n                    })\n                    .catch(error => {\n                        console.error(\"Error getting member info:\", error);\n                        moveToPath(\"/\") // 오류 발생 시 로그인 페이지로 이동\n                    });\n            });\n        }\n        // getAccessToken(authCode).then(accessToken => {\n        //     getMemberWithAccessToken(accessToken)\n        //         .then(memberInfo => {\n        //             console.log(\"--------------------\");\n        //             console.log(memberInfo);\n        //             dispatch(login(memberInfo));\n        //\n        //             if (memberInfo && memberInfo.social) {\n        //                 moveToPath(\"/\");\n        //             } else {\n        //                 moveToPath(\"/\");\n        //             }\n        //         })\n        //         .catch(error => {\n        //             console.error(\"Error getting member info:\", error);\n        //             moveToPath(\"/login\"); // 오류 발생 시 로그인 페이지로 이동\n        //         });\n        // });\n    }, [authCode]);\n\n    return (\n        <div>\n            <div>Kakao Login Redirect</div>\n        </div>\n    );\n}\n\nexport default KakaoRedirectPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,cAAc,EAAEC,wBAAwB,QAAQ,oBAAoB;AAC7E,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,KAAK,QAAQ,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,YAAY,CAAC,GAAGX,eAAe,CAAC,CAAC;EACxC,MAAM;IAAEY;EAAW,CAAC,GAAGP,cAAc,CAAC,CAAC;EACvC,MAAMQ,QAAQ,GAAGF,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC;EACzC,MAAMC,KAAK,GAAGJ,YAAY,CAACG,GAAG,CAAC,OAAO,CAAC;EACvC,MAAME,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IAEZ,IAAGgB,KAAK,EAAC;MAELH,UAAU,CAAC,eAAe,CAAC;IAC/B,CAAC,MAAK,IAAGC,QAAQ,EAAC;MACdZ,cAAc,CAACY,QAAQ,CAAC,CAACI,IAAI,CAACC,WAAW,IAAI;QACzChB,wBAAwB,CAACgB,WAAW,CAAC,CAChCD,IAAI,CAACE,UAAU,IAAI;UAChBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;UACnCD,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;UACvBH,QAAQ,CAACZ,KAAK,CAACe,UAAU,CAAC,CAAC;UAE3B,IAAGA,UAAU,IAAIA,UAAU,CAACG,MAAM,EAAC;YAC/BV,UAAU,CAAC,GAAG,CAAC;UACnB,CAAC,MAAI;YACDA,UAAU,CAAC,GAAG,CAAC;UACnB;QACJ,CAAC,CAAC,CACDW,KAAK,CAACR,KAAK,IAAI;UACZK,OAAO,CAACL,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;UAClDH,UAAU,CAAC,GAAG,CAAC,EAAC;QACpB,CAAC,CAAC;MACV,CAAC,CAAC;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC;EAEd,oBACIN,OAAA;IAAAiB,QAAA,eACIjB,OAAA;MAAAiB,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEd;AAAClB,EAAA,CAzDQF,iBAAiB;EAAA,QACCR,eAAe,EACfK,cAAc,EAGpBF,WAAW;AAAA;AAAA0B,EAAA,GALvBrB,iBAAiB;AA2D1B,eAAeA,iBAAiB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}