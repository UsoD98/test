{"ast":null,"code":"import axios from \"axios\";\nexport const API_SERVER_HOST = \"http://localhost:8080\";\nconst prefix = `${API_SERVER_HOST}/api/todo`;\nexport const getOne = async tno => {\n  try {\n    const res = await axios.get(`${prefix}/read/${tno}`);\n    return res.data;\n  } catch (error) {\n    console.error(error);\n    // Handle the error based on your application's requirement\n  }\n};\nexport const getList = async pageParam => {\n  const {\n    page,\n    size\n  } = pageParam;\n  const res = await axios.get(`${prefix}/list`, {\n    params: {\n      page,\n      size\n    }\n  });\n  return res.data;\n};","map":{"version":3,"names":["axios","API_SERVER_HOST","prefix","getOne","tno","res","get","data","error","console","getList","pageParam","page","size","params"],"sources":["/Users/kjw/Library/CloudStorage/OneDrive-광운대학교/React/ch02_start/src/api/todoApi.js"],"sourcesContent":["import axios from \"axios\";\n\n\nexport const API_SERVER_HOST = \"http://localhost:8080\"\n\nconst prefix = `${API_SERVER_HOST}/api/todo`\n\nexport const getOne = async (tno) => {\n    try {\n        const res = await axios.get(`${prefix}/read/${tno}`);\n        return res.data;\n    } catch (error) {\n        console.error(error);\n        // Handle the error based on your application's requirement\n    }\n}\n\nexport const getList = async (pageParam) => {\n    const {page, size} = pageParam\n\n    const res = await axios.get(`${prefix}/list`, {params: {page, size}})\n\n    return res.data\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAO,MAAMC,eAAe,GAAG,uBAAuB;AAEtD,MAAMC,MAAM,GAAI,GAAED,eAAgB,WAAU;AAE5C,OAAO,MAAME,MAAM,GAAG,MAAOC,GAAG,IAAK;EACjC,IAAI;IACA,MAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,GAAEJ,MAAO,SAAQE,GAAI,EAAC,CAAC;IACpD,OAAOC,GAAG,CAACE,IAAI;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB;EACJ;AACJ,CAAC;AAED,OAAO,MAAME,OAAO,GAAG,MAAOC,SAAS,IAAK;EACxC,MAAM;IAACC,IAAI;IAAEC;EAAI,CAAC,GAAGF,SAAS;EAE9B,MAAMN,GAAG,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,GAAEJ,MAAO,OAAM,EAAE;IAACY,MAAM,EAAE;MAACF,IAAI;MAAEC;IAAI;EAAC,CAAC,CAAC;EAErE,OAAOR,GAAG,CAACE,IAAI;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}