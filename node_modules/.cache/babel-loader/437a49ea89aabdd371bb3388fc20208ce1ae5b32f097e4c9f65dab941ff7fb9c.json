{"ast":null,"code":"var _jsxFileName = \"/Users/kjw/Library/CloudStorage/OneDrive-\\u1100\\u116A\\u11BC\\u110B\\u116E\\u11AB\\u1103\\u1162\\u1112\\u1161\\u11A8\\u1100\\u116D/React/test/src/pages/member/KakaoRedirectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSearchParams } from \"react-router-dom\";\nimport { getAccessToken, getMemberWithAccessToken } from \"../../api/kakapApi\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../slices/loginSlice\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction KakaoRedirectPage(props) {\n  _s();\n  const [searchParams] = useSearchParams();\n  const {\n    moveToPath\n  } = useCustomLogin();\n  const authCode = searchParams.get('code');\n  const dispatch = useDispatch();\n\n  //인가 코드가 바뀔때마다 달라짐 => useEffect로 처리해야 함\n  useEffect(() => {\n    getAccessToken(authCode).then(accessToken => {\n      getMemberWithAccessToken(accessToken).then(memberInfo => {\n        console.log(\"--------------------\");\n        console.log(memberInfo);\n        dispatch(login(memberInfo));\n        if (memberInfo && memberInfo.social) {\n          moveToPath(\"/\");\n        } else {\n          moveToPath(\"/\");\n        }\n      });\n    });\n  }, [authCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Kakao Login Redirect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(KakaoRedirectPage, \"Zs/3wSOzM3rqZ50OThXsP4I3y+s=\", false, function () {\n  return [useSearchParams, useCustomLogin, useDispatch];\n});\n_c = KakaoRedirectPage;\nexport default KakaoRedirectPage;\n\n// 회원 쪽이니 memberRouter 에 추가\nvar _c;\n$RefreshReg$(_c, \"KakaoRedirectPage\");","map":{"version":3,"names":["React","useEffect","useSearchParams","getAccessToken","getMemberWithAccessToken","useDispatch","login","useCustomLogin","jsxDEV","_jsxDEV","KakaoRedirectPage","props","_s","searchParams","moveToPath","authCode","get","dispatch","then","accessToken","memberInfo","console","log","social","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kjw/Library/CloudStorage/OneDrive-광운대학교/React/test/src/pages/member/KakaoRedirectPage.js"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {useSearchParams} from \"react-router-dom\";\nimport {getAccessToken, getMemberWithAccessToken} from \"../../api/kakapApi\";\nimport {useDispatch} from \"react-redux\";\nimport {login} from \"../../slices/loginSlice\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\n\nfunction KakaoRedirectPage(props) {\n\n    const [searchParams] = useSearchParams()\n\n    const {moveToPath} = useCustomLogin()\n\n    const authCode = searchParams.get('code')\n\n    const dispatch = useDispatch()\n\n    //인가 코드가 바뀔때마다 달라짐 => useEffect로 처리해야 함\n    useEffect(() => {\n        getAccessToken(authCode).then(accessToken => {\n\n            getMemberWithAccessToken(accessToken).then(memberInfo => {\n                console.log(\"--------------------\")\n                console.log(memberInfo)\n                dispatch(login(memberInfo))\n\n                if(memberInfo && memberInfo.social) {\n                    moveToPath(\"/\")\n                }else {\n                    moveToPath(\"/\")\n                }\n\n            })\n\n        })\n    }, [authCode]);\n\n    return (\n        <div>\n            <div>Kakao Login Redirect</div>\n            {/*<div>{authCode}</div>*/}\n        </div>\n    );\n}\n\nexport default KakaoRedirectPage;\n\n// 회원 쪽이니 memberRouter 에 추가"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAAQC,eAAe,QAAO,kBAAkB;AAChD,SAAQC,cAAc,EAAEC,wBAAwB,QAAO,oBAAoB;AAC3E,SAAQC,WAAW,QAAO,aAAa;AACvC,SAAQC,KAAK,QAAO,yBAAyB;AAC7C,OAAOC,cAAc,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAE9B,MAAM,CAACC,YAAY,CAAC,GAAGX,eAAe,CAAC,CAAC;EAExC,MAAM;IAACY;EAAU,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,QAAQ,GAAGF,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC;EAEzC,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;;EAE9B;EACAJ,SAAS,CAAC,MAAM;IACZE,cAAc,CAACY,QAAQ,CAAC,CAACG,IAAI,CAACC,WAAW,IAAI;MAEzCf,wBAAwB,CAACe,WAAW,CAAC,CAACD,IAAI,CAACE,UAAU,IAAI;QACrDC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;QACnCD,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;QACvBH,QAAQ,CAACX,KAAK,CAACc,UAAU,CAAC,CAAC;QAE3B,IAAGA,UAAU,IAAIA,UAAU,CAACG,MAAM,EAAE;UAChCT,UAAU,CAAC,GAAG,CAAC;QACnB,CAAC,MAAK;UACFA,UAAU,CAAC,GAAG,CAAC;QACnB;MAEJ,CAAC,CAAC;IAEN,CAAC,CAAC;EACN,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC;EAEd,oBACIN,OAAA;IAAAe,QAAA,eACIf,OAAA;MAAAe,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9B,CAAC;AAEd;AAAChB,EAAA,CApCQF,iBAAiB;EAAA,QAECR,eAAe,EAEjBK,cAAc,EAIlBF,WAAW;AAAA;AAAAwB,EAAA,GARvBnB,iBAAiB;AAsC1B,eAAeA,iBAAiB;;AAEhC;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}