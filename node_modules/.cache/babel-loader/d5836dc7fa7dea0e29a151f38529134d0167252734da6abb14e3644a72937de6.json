{"ast":null,"code":"var _jsxFileName = \"/Users/kjw/Library/CloudStorage/OneDrive-\\u1100\\u116A\\u11BC\\u110B\\u116E\\u11AB\\u1103\\u1162\\u1112\\u1161\\u11A8\\u1100\\u116D/React/test/src/pages/member/KakaoRedirectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSearchParams } from \"react-router-dom\";\nimport { getAccessToken, getMemberWithAccessToken } from \"../../api/kakapApi\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../slices/loginSlice\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction KakaoRedirectPage(props) {\n  _s();\n  const [searchParams] = useSearchParams();\n  const {\n    moveToPath\n  } = useCustomLogin();\n  const authCode = searchParams.get('code');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getAccessToken(authCode).then(accessToken => {\n      getMemberWithAccessToken(accessToken).then(memberInfo => {\n        console.log(\"--------------------\");\n        console.log(memberInfo);\n        dispatch(login(memberInfo));\n        if (memberInfo && memberInfo.social) {\n          moveToPath(\"/\");\n        } else {\n          moveToPath(\"/\");\n        }\n      }).catch(error => {\n        console.error(\"Error getting member info:\", error);\n        moveToPath(\"/login\"); // 오류 발생 시 로그인 페이지로 이동\n      });\n    });\n  }, [authCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Kakao Login Redirect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(KakaoRedirectPage, \"SVTyfUWoFmCYXDbfYsyQmVNetVc=\", false, function () {\n  return [useSearchParams, useCustomLogin, useDispatch];\n});\n_c = KakaoRedirectPage;\nexport default KakaoRedirectPage;\nvar _c;\n$RefreshReg$(_c, \"KakaoRedirectPage\");","map":{"version":3,"names":["React","useEffect","useSearchParams","getAccessToken","getMemberWithAccessToken","useDispatch","login","useCustomLogin","jsxDEV","_jsxDEV","KakaoRedirectPage","props","_s","searchParams","moveToPath","authCode","get","dispatch","then","accessToken","memberInfo","console","log","social","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kjw/Library/CloudStorage/OneDrive-광운대학교/React/test/src/pages/member/KakaoRedirectPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSearchParams } from \"react-router-dom\";\nimport { getAccessToken, getMemberWithAccessToken } from \"../../api/kakapApi\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../slices/loginSlice\";\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\n\nfunction KakaoRedirectPage(props) {\n    const [searchParams] = useSearchParams();\n    const { moveToPath } = useCustomLogin();\n    const authCode = searchParams.get('code');\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        getAccessToken(authCode).then(accessToken => {\n            getMemberWithAccessToken(accessToken)\n                .then(memberInfo => {\n                    console.log(\"--------------------\");\n                    console.log(memberInfo);\n                    dispatch(login(memberInfo));\n\n                    if (memberInfo && memberInfo.social) {\n                        moveToPath(\"/\");\n                    } else {\n                        moveToPath(\"/\");\n                    }\n                })\n                .catch(error => {\n                    console.error(\"Error getting member info:\", error);\n                    moveToPath(\"/login\"); // 오류 발생 시 로그인 페이지로 이동\n                });\n        });\n    }, [authCode]);\n\n    return (\n        <div>\n            <div>Kakao Login Redirect</div>\n        </div>\n    );\n}\n\nexport default KakaoRedirectPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,cAAc,EAAEC,wBAAwB,QAAQ,oBAAoB;AAC7E,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,KAAK,QAAQ,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,YAAY,CAAC,GAAGX,eAAe,CAAC,CAAC;EACxC,MAAM;IAAEY;EAAW,CAAC,GAAGP,cAAc,CAAC,CAAC;EACvC,MAAMQ,QAAQ,GAAGF,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC;EACzC,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACZE,cAAc,CAACY,QAAQ,CAAC,CAACG,IAAI,CAACC,WAAW,IAAI;MACzCf,wBAAwB,CAACe,WAAW,CAAC,CAChCD,IAAI,CAACE,UAAU,IAAI;QAChBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;QACnCD,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;QACvBH,QAAQ,CAACX,KAAK,CAACc,UAAU,CAAC,CAAC;QAE3B,IAAIA,UAAU,IAAIA,UAAU,CAACG,MAAM,EAAE;UACjCT,UAAU,CAAC,GAAG,CAAC;QACnB,CAAC,MAAM;UACHA,UAAU,CAAC,GAAG,CAAC;QACnB;MACJ,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAI;QACZJ,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDX,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC;IACV,CAAC,CAAC;EACN,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC;EAEd,oBACIN,OAAA;IAAAiB,QAAA,eACIjB,OAAA;MAAAiB,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEd;AAAClB,EAAA,CAhCQF,iBAAiB;EAAA,QACCR,eAAe,EACfK,cAAc,EAEpBF,WAAW;AAAA;AAAA0B,EAAA,GAJvBrB,iBAAiB;AAkC1B,eAAeA,iBAAiB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}